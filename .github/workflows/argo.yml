name: ARGO

on:
  push:
    branches:
      - main

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ruslanmaistrenko
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image with a version tag
      - name: Build and push Docker image
        run: |
          # Get the current Git commit SHA for versioning
          VERSION=$(git rev-parse --short HEAD)
          docker build -t ruslanmaistrenko/my_image:$VERSION .
          docker push ruslanmaistrenko/my_image:$VERSION
          docker tag ruslanmaistrenko/my_image:$VERSION ruslanmaistrenko/my_image:latest
          docker push ruslanmaistrenko/my_image:latest

  update-helm-chart:
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Git user
        run: |
          git config --global user.email "rmaistrenko.job+lead@gmail.com"
          git config --global user.name "rmaistrenko-lead"

      # Update Helm chart with the new image tag
      - name: Update Helm Chart with new image tag
        run: |
          VERSION=$(git rev-parse --short HEAD)
          sed -i "s|image: ruslanmaistrenko/my_image:.*|image: ruslanmaistrenko/my_image:$VERSION|" ./values.yaml
          git add ./values.yaml
          git commit -m "Update Helm chart with new image version $VERSION"
          git push

  sync-argocd:
    needs: update-helm-chart
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to ArgoCD
      - name: Login to ArgoCD
        run: |
          argocd login localhost:8081 --username admin --password dojCecnCPHGsi-Nt --insecure

      # Sync application in ArgoCD
      - name: Sync ArgoCD application
        run: |
          argocd app sync go-crud --auth-token ${{ secrets.ARGOCD_TOKEN }}
