name: CI Pipeline

on:
  push:
    branches:
      - main  # Запуск пайплайну при кожному пуші в main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Крок 1: Checkout репозиторію
      - name: Checkout repository
        uses: actions/checkout@v2

      # Тестовий крок для перевірки логіна
      - name: Test Docker login
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Крок 2: Логін в Docker
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Крок 3: Побудова Docker образу
      - name: Build Docker image
        run: |
          docker build -t your-docker-repo/your-image:${{ github.sha }} .
          docker tag your-docker-repo/your-image:${{ github.sha }} your-docker-repo/your-image:latest

      # Крок 4: Push Docker образу в реєстр
      - name: Push Docker image to DockerHub
        run: |
          docker push your-docker-repo/your-image:${{ github.sha }}
          docker push your-docker-repo/your-image:latest

      # Крок 5: Оновлення Helm чарту
      - name: Update Helm chart with new image
        run: |
          sed -i "s|image: your-docker-repo/your-image:.*|image: your-docker-repo/your-image:${{ github.sha }}|" ./charts/your-helm-chart/values.yaml
          git add ./charts/your-helm-chart/values.yaml
          git commit -m "Update Docker image version"
          git push origin main

      # Крок 6: Оновлення Helm чарту в репозиторії
      - name: Push Helm chart changes
        uses: helm/chart-releaser-action@v1
        with:
          charts-dir: ./charts
          release-name: your-chart-release
          chart-version: ${{ github.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}  # Для доступу до репозиторію
