name: AWS CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Stage 1: Build Docker image
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ruslanmaistrenko
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ruslanmaistrenko/my_image:latest

  # Stage 2: Test Application
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 1111
          MYSQL_DATABASE: go_crud_api
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install migrate tool
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz -o migrate.tar.gz
          tar -xvf migrate.tar.gz
          chmod +x migrate
          sudo mv migrate /usr/local/bin/

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h127.0.0.1 -u root -p1111 --silent; then
              break
            fi
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Run migrations
        run: migrate -path ./migrations -database "mysql://root:1111@tcp(127.0.0.1:3306)/go_crud_api" up

      - name: Run tests
        env:
          DB_USER: root
          DB_PASSWORD: 1111
          DB_NAME: go_crud_api
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
        run: go test ./... -v

  # Stage 3: Deploy to Kubernetes
  deploy:
    needs: [ build, test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubeconfig
        run: |
          aws eks update-kubeconfig --region eu-central-1 --name k8s-dev

      - name: Deploy Canary to Kubernetes
        run: |
          kubectl apply -f k8s/canary-deployment.yaml
          kubectl rollout status deployment my-app-canary
          echo "Canary Deployment successful!"
  
